package MateAcademy.DailyTask;

import java.util.Stack;

public class ValidParentheses {
    public static boolean isValidParentheses(String string) {
        Stack<Character> stack = new Stack<>();
        for (int i = 0; i < string.length(); i++) {
            char c = string.charAt(i);

            if (c == '(') {
                stack.push(c);
            } else if (c == ')'){
                if (stack.isEmpty() || stack.pop() != '(') {
                    return false;
                }
            }
        }
        return stack.isEmpty();
    }
}


/*
Ініціалізуй порожній стек, який буде використовуватися для перевірки дужок.

Пройдись по кожному символу у вхідному рядку string.

Якщо символ - відкриваюча дужка (наприклад, '('), додай її до стеку.

Якщо символ - закриваюча дужка (наприклад, ')'), перевір чи стек не є порожнім:

Якщо стек порожній, це означає, що закриваюча дужка не має відповідної відкриваючої дужки, тому поверни false.

Якщо стек не порожній, видали верхній елемент зі стеку. Це означає, що закриваюча дужка має відповідну відкриваючу дужку.

Після проходження усіх символів у рядку, перевір, чи стек порожній:

Якщо стек порожній, це означає, що всі дужки мають відповідні пари, тому поверни true.

Якщо стек не порожній, це означає, що є невідповідна відкриваюча дужка без закриваючої дужки, тому поверни false.

Стек - це структура даних, що працює за принципом "останній прийшов, першим вийшов" (Last-In-First-Out, LIFO). Це означає, що останній елемент, який додали в стек, буде першим, який вийматимуть зі стеку.

У випадку перевірки правильності порядку дужок, ми можемо використовувати стек для збереження відкриваючих дужок (лівих дужок). Коли зустрічається відкриваюча дужка, ми її додаємо до стеку. Коли зустрічається закриваюча дужка, ми перевіряємо, чи остання відкриваюча дужка у стеці відповідає поточній закриваючій дужці. Якщо вони відповідають один одному (наприклад, "()" або "[]"), то видаляємо останню відкриваючу дужку зі стеку. Якщо вони не відповідають один одному, то порядок дужок неправильний і можемо відразу повернути false.

Якщо після обробки всіх символів рядка стек все ще не порожній, це означає, що є недостатньо закриваючих дужок для відповідних відкриваючих дужок, тому порядок дужок також неправильний.

Використання стека дозволяє нам зберігати правильний порядок дужок у рядку і перевіряти їх відповідність під час обходу рядка. Це дозволяє ефективно вирішити завдання перевірки правильності порядку дужок.
 */